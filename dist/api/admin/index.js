"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express = require("express");
const auth_1 = require("../../common/helpers/auth");
const router = express.Router();
const authInstance = new auth_1.default();
const userController_1 = require("./controllers/userController");
const schoolController_1 = require("./controllers/schoolController");
const internSubjectController_1 = require("./controllers/internSubjectController");
const manageAppController_1 = require("./controllers/manageAppController");
const studentLearnInternSubjectController_1 = require("./controllers/studentLearnInternSubjectController");
const studentRequestRegistInternController_1 = require("./controllers/studentRequestRegistInternController");
router.post('/school/:id/register', authInstance.verifyAdminSchool, userController_1.userController.register);
router.post('/school', manageAppController_1.manageAppController.saveSchool);
router.delete('/school', manageAppController_1.manageAppController.deleteSchool);
router.get('/manage-school', manageAppController_1.manageAppController.getSchools);
router.post('/business', manageAppController_1.manageAppController.saveBusiness);
router.put('/business', manageAppController_1.manageAppController.updateBusiness);
router.delete('/business', manageAppController_1.manageAppController.deleteSchool);
router.get('/business', manageAppController_1.manageAppController.businesses);
router.get('/school-linked-business', manageAppController_1.manageAppController.schoolLinkedBusinesses);
router.get('/school', authInstance.authAdmin, schoolController_1.schoolController.getSchool);
router.post('/school/:id/program', authInstance.verifyAdminSchool, schoolController_1.schoolController.saveProgram);
router.put('/school/:id/program/:pid', authInstance.verifyAdminSchool, schoolController_1.schoolController.updateProgram);
router.get('/school/:id/program', authInstance.verifyAuthSchool, schoolController_1.schoolController.getPrograms);
router.get('/school/:id/program/:pid', authInstance.verifyAuthSchool, schoolController_1.schoolController.getProgram);
router.delete('/school/:id/program/:pid', authInstance.verifyAdminSchool, schoolController_1.schoolController.deleteProgram);
router.post('/school/:id/department', authInstance.verifyAdminSchool, schoolController_1.schoolController.saveDepartment);
router.put('/school/:id/department/:did', authInstance.verifyAdminSchool, schoolController_1.schoolController.updateDepartment);
router.get('/school/:id/department', authInstance.verifyAuthSchool, schoolController_1.schoolController.getDepartments);
router.get('/school/:id/department/:did', authInstance.verifyAuthSchool, schoolController_1.schoolController.getDepartment);
router.delete('/school/:id/department/:did', authInstance.verifyAdminSchool, schoolController_1.schoolController.deleteDepartment);
router.post('/school/:id/major', authInstance.authAdmin, schoolController_1.schoolController.saveMajor);
router.get('/school/:id/major', authInstance.auth, schoolController_1.schoolController.getMajors);
router.delete('/school/:id/major', authInstance.authAdmin, schoolController_1.schoolController.deleteMajors);
router.post('/school/:id/department/:did/class', authInstance.verifyAdminSchool, schoolController_1.schoolController.saveClass);
router.put('/school/:id/department/:did/class/:cid', authInstance.verifyAdminSchool, schoolController_1.schoolController.updateClass);
router.get('/school/:id/class', authInstance.verifyAuthSchool, schoolController_1.schoolController.getClasses);
router.delete('/school/:id/class/:cid', authInstance.verifyAdminSchool, schoolController_1.schoolController.deleteClass);
router.post('/school/:id/department/:did/intern-subject', authInstance.verifyAdminSchool, internSubjectController_1.internSubjectController.saveInternSubject);
router.get('/school/:id/intern-subject', authInstance.verifyAuthSchool, internSubjectController_1.internSubjectController.getInternSubjects);
router.delete('/school/:id/intern-subject', authInstance.verifyAdminSchool, internSubjectController_1.internSubjectController.deleteInternSubjects);
router.get('/school/:id/learn-intern', authInstance.authAdmin, studentLearnInternSubjectController_1.studentLearnInternController.getStudentLearnInternSubject);
router.put('/school/learn-intern/:id', authInstance.authAdmin, studentLearnInternSubjectController_1.studentLearnInternController.updateLearnIntern);
router.post('/school/:id/academic-year', authInstance.authAdmin, schoolController_1.schoolController.saveAcademicYear);
router.get('/school/:id/academic-year', authInstance.auth, schoolController_1.schoolController.getAcademicYear);
router.delete('/school/:id/academic-year/:aid', authInstance.authAdmin, schoolController_1.schoolController.deleteAcademicYear);
router.post('/school/:id/semester', authInstance.authAdmin, schoolController_1.schoolController.saveSemester);
router.get('/school/:id/semester', authInstance.auth, schoolController_1.schoolController.getSemester);
router.delete('/school/:id/semester/:sid', authInstance.authAdmin, schoolController_1.schoolController.deleteSemester);
router.get('/', authInstance.authAdmin, userController_1.userController.getAdministrators);
router.get('/school/teacher', authInstance.authAdmin, userController_1.userController.getTeachers);
router.get('/school/student', authInstance.authAdmin, userController_1.userController.getStudents);
router.get('/introducing-letter', authInstance.authAdmin, studentRequestRegistInternController_1.StudentRequestRegistIntern.requestRegisInterns);
router.put('/introducing-letter/:id', authInstance.authAdmin, studentRequestRegistInternController_1.StudentRequestRegistIntern.updateRequest);
module.exports = router;
//# sourceMappingURL=index.js.map